#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'TOTVS.CH'
#INCLUDE 'TOPCONN.CH'

/*/{Protheus.doc} User Function MT100LOK
    (Ponto de Entrada utilizado para validar a linha do documento de entrada MATA103
    implementado inicialmente para tratar e impedir que itens sejam incluidos com quantidade
    maio ou igual a 5 e que usem TES diferente das que estï¿½o no parï¿½mentro MV_YTESQTD.)
    @type  Function
    @author user
    @since 05/06/2021
    @version version
    @param param_name, param_type, param_descr
    @return return_var, return_type, return_description
    @example
    (examples)
    @see (links_or_references)
    /*/

User Function MT100LOK()


Local lRet      := .T.
Local cAcolsSUM := aScan(aHeader, {|x| AllTrim(x[2]) == "D1_SEGUM"})
Local nAcolsQTD := aScan(aHeader, {|x| AllTrim(x[2]) == "D1_QUANT"}) 
Local cSUM      := aCols[n,cAcolsSUM] // n = linha nAcolsTES = coluna
Local nQUANT    := aCols[n,nAcolsQTD] // n = linha nAcolsQTD = coluna


if nQUANT < 1000  .AND. (cSUM$SUPERGETMV("MV_YQTDSUM")) //MH;SC;
    lRet := .F.
    Alert("Não é permitida a entrada de itens com a quantidade abaixo de 1.000 UND e que a unidade de medida" +CHR(10)+CHR(13)+;
     "de origem seja Milheiro (MH). Corrija a quantidade"+CHR(10)+CHR(13),"Alert")
endif


Return (lRet)






#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'TOTVS.CH'
#INCLUDE 'TOPCONN.CH'

/*/{Protheus.doc} User Function MT100LOK
    (Ponto de Entrada utilizado para validar a linha do documento de entrada MATA103
    implementado inicialmente para tratar e impedir que itens sejam incluidos com quantidade
    maio ou igual a 5 e que usem TES diferente das que estï¿½o no parï¿½mentro MV_YTESQTD.)
    @type  Function
    @author user
    @since 05/06/2021
    @version version
    @param param_name, param_type, param_descr
    @return return_var, return_type, return_description
    @example
    (examples)
    @see (links_or_references)
    /*/

User Function MT100LOK()

Local lRet      := .T.
Local nAcolsTES := aScan(aHeader, {|x| AllTrim(x[2]) == "D1_TES"})
Local nAcolsQTD := aScan(aHeader, {|x| AllTrim(x[2]) == "D1_QUANT"}) 
Local cTES      := aCols[n,nAcolsTES] // n = linha nAcolsTES = coluna
Local nQUANT    := aCols[n,nAcolsQTD] // n = linha nAcolsQTD = coluna


if nQUANT >= 5 .AND. !(cTES$SUPERGETMVPAR("MV_YTESQTD")) //003;004;010;
    lRet := .F.
    Alert("Para quantidades iguais ou superior a 5, deve-se usar as TES especificas"+CHR(10)+CHR(13)+;
    "Consulte o seu setor Financeiro","Alert")
endif


Return (lRet)


